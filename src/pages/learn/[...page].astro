---
import type { CollectionEntry } from "astro:content";
import Pagination from "@/components/Paginator.astro";
import PostPreview from "@/components/blog/PostPreview.astro"; // keep if your preview component is still called PostPreview
import {
	getAllLearn,          // <- new helpers for the learn collection
	getUniqueTags,
	groupLearnByTopic,
} from "@/data/learn";
import PageLayout from "@/layouts/Base.astro";
import { collectionDateSort } from "@/utils/date";
import type { GetStaticPaths, Page } from "astro";
import { Icon } from "astro-icon/components";

export const getStaticPaths = (async ({ paginate }) => {
	const MAX_POSTS_PER_PAGE = 10;
	const MAX_TAGS = 7;
	const allLearn = await getAllLearn();
	const uniqueTags = getUniqueTags(allLearn).slice(0, MAX_TAGS);

	return paginate(allLearn.sort(collectionDateSort), {
		pageSize: MAX_POSTS_PER_PAGE,
		props: { uniqueTags },
	});
}) satisfies GetStaticPaths;

interface Props {
	page: Page<CollectionEntry<"learn">>;   // <- collection key is now "learn"
	uniqueTags: string[];
}

const { page, uniqueTags } = Astro.props;

const meta = {
	description: "Read my collection of learning notes and resources",
	title: "Learn",
};

const paginationProps = {
	...(page.url.prev && {
		prevUrl: { text: "← Previous Page", url: page.url.prev },
	}),
	...(page.url.next && {
		nextUrl: { text: "Next Page →", url: page.url.next },
	}),
};

const groupedByTopic = groupLearnByTopic(page.data);
const sortedTopicKeys = Object.keys(groupedByTopic).sort();
---

<PageLayout meta={meta}>
	<div class="mb-6 flex items-center gap-3">
		<h1 class="title">Learn</h1>
		<a class="text-accent" href="/rss.xml" target="_blank">
			<span class="sr-only">RSS feed</span>
			<Icon aria-hidden="true" class="h-6 w-6" focusable="false" name="mdi:rss" />
		</a>
	</div>

	<div class="grid sm:grid-cols-[3fr_1fr] sm:gap-x-8 sm:gap-y-16">
		<div>
			{sortedTopicKeys.map((topicKey) => {
				const posts = (groupedByTopic[topicKey] ?? []).sort(
					(a, b) =>
						new Date(b.data.publishDate).getTime() -
						new Date(a.data.publishDate).getTime(),
				);

				return (
					<section aria-labelledby={`topic-${topicKey}`}>
						<h2 id={`topic-${topicKey}`} class="title text-lg">
							{topicKey}
						</h2>
						<ul class="mt-5 mb-16 space-y-4 text-start">
							{posts.map((p) => (
								<li class="grid gap-2 sm:grid-cols-[auto_1fr] sm:[&_q]:col-start-2">
									<time
										class="font-mono text-sm tabular-nums text-slate-600 dark:text-slate-400"
										datetime={p.data.publishDate.toISOString()}
									>
										{new Date(p.data.publishDate).toLocaleDateString("en-GB", {
											day: "numeric",
											month: "short",
											year: "numeric",
										})}
									</time>
									<PostPreview post={p} />
								</li>
							))}
						</ul>
					</section>
				);
			})}

			<Pagination {...paginationProps} />
		</div>

		{!!uniqueTags.length && (
			<aside>
				<h2 class="title mb-4 flex items-center gap-2 text-lg">
					Tags
					<svg
						aria-hidden="true"
						class="h-6 w-6"
						fill="none"
						stroke="currentColor"
						stroke-linecap="round"
						stroke-linejoin="round"
						stroke-width="1.5"
						viewBox="0 0 24 24"
						xmlns="http://www.w3.org/2000/svg"
					>
						<path d="M0 0h24v24H0z" fill="none" stroke="none" />
						<path d="M7.859 6h-2.834a2.025 2.025 0 0 0 -2.025 2.025v2.834c0 .537 .213 1.052 .593 1.432l6.116 6.116a2.025 2.025 0 0 0 2.864 0l2.834 -2.834a2.025 2.025 0 0 0 0 -2.864l-6.117 -6.116a2.025 2.025 0 0 0 -1.431 -.593z" />
						<path d="M17.573 18.407l2.834 -2.834a2.025 2.025 0 0 0 0 -2.864l-7.117 -7.116" />
						<path d="M6 9h-.01" />
					</svg>
				</h2>

				<ul class="flex flex-wrap gap-2">
					{uniqueTags.map((tag) => (
						<li>
							<a class="cactus-link flex items-center justify-center" href={`/tags/${tag}/`}>
								<span aria-hidden="true">#</span>
								<span class="sr-only">View all learn posts with the tag</span>
								{tag}
							</a>
						</li>
					))}
				</ul>

				<span class="mt-4 block sm:text-end">
					<a class="hover:text-link" href="/tags/">
						View all <span aria-hidden="true">→</span>
						<span class="sr-only">learn tags</span>
					</a>
				</span>
			</aside>
		)}
	</div>
</PageLayout>
